type Time = int;
type Result_1 = 
 variant {
   err: text;
   ok: Homework;
 };
type Result = 
 variant {
   err: text;
   ok;
 };
type Homework = 
 record {
   completed: bool;
   creator: principal;
   description: text;
   dueDate: Time;
   id: nat;
   title: text;
 };
type CreateUpdateHomework = 
 record {
   completed: bool;
   description: text;
   title: text;
 };
service : {
  addHomework: (CreateUpdateHomework) -> (nat);
  deleteHomework: (nat) -> (Result);
  getAllHomework: () -> (vec Homework) query;
  getHomework: (nat) -> (Result_1) query;
  getPendingHomework: () -> (vec Homework) query;
  markAsCompleted: (nat) -> (Result);
  searchHomework: (text) -> (vec Homework) query;
  updateHomework: (nat, CreateUpdateHomework) -> (Result);
}
